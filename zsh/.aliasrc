#!/usr/bin/env bash

# General
alias a="ack"
alias ai="ack --invert-match"
alias ap="ack --passthru"
alias aq="grep" # Don't highlight matches
alias caps="setxkbmap -option caps:escape" # Reapply Caps to Escape keyboard mapping on my Pi
alias day="date +%m-%d-%Y"
alias e="exit"
alias lines="tokei"
alias md="glow -s ~/.dotfiles/glow/nord.json --pager"
alias mdn="glow -s ~/.dotfiles/glow/nord.json"
alias mdr="glow -s ~/.dotfiles/glow/nord.json --pager README.md"
alias mdrn="glow -s ~/.dotfiles/glow/nord.json README.md"
alias play="ansible-playbook "
alias rc="exec zsh"
alias renpy="~/Projects/renpy/renpy.sh"
alias sudoe='sudo -E env PATH=$PATH'
alias mktmp="mkdir tmp 2>/dev/null || true && cd tmp"
alias tree="tree -a -I '.git'"
alias vimdiff="nvim -d"
alias vimrc="nvim ~/.config/nvim/init.vim"
alias w="watch"
alias watch="watch " # This is so aliases get expanded when passed to `watch`
alias wdl="wd list"
alias whatami="uname -a; arch; lsb_release -a"

# Windows (for use with WSL2)
alias choco="choco.exe"
alias chocol="choco.exe list --local-only"
alias o="explorer.exe ."
alias pb="clip.exe"
alias powershell="powershell.exe"
alias wsl="wsl.exe"

# tmux (there are also a few functions defined in .functionsrc)
alias tm="tmux"
alias tmkill="tmux kill-session"
alias tml="tmux ls"
alias tmn="tmux new"
alias tmc="tmux loadb -" # Copy raw bytes unmodified into the tmux paste buffer
alias tmp="tmux showb" # Paste the tmux paste buffer and performs octal encoding of non-printable characters
alias tmpr="tmux saveb -" # Paste raw bytes unmodified into stdout

# Go
alias gg="go get -v"
alias gmod="go clean -modcache && go mod tidy"
alias gun="go run main.go"
alias gin="go install && go run main.go"
alias gest="go test -race ./..."
alias gestv="go test -v -race ./..."

# Docker (there are also a few functions defined in .functionsrc)
alias inflate="scuttle && docker-compose build && docker-compose up"
alias inflated="scuttle && docker-compose build && docker-compose up -d"
alias deflate="docker-compose down"

# Pico-8
alias pew="cp ~/Library/Application\\ Support/pico-8/carts/blank.p8"
alias pest="/Applications/PICO-8.app/Contents/MacOS/pico8 -run"
alias pun="cd ..; pico-build run; cd src"
alias pud="mv ~/Library/Application\\ Support/pico-8/carts/new.p8 _assets.p8"
alias ped="cd ..; pico-build edit; cd src"

# git (there are also a few functions defined in .functionsrc)
alias ga="git add"
alias gb="git branch -a"
alias gbd="git branch -D"
alias gc="git checkout"
alias gcb="git checkout -b"
alias gcl="gh repo clone"
alias gcm="git checkout master"
alias gd="git diff --ignore-all-space"
alias gdc="git --no-pager diff --check"
alias gf="gh repo fork"
alias gi="gh issue create --assignee jessemillar"
alias gil="gh issue list"
alias gl="git log"
alias gla="git log | ack"
alias gp="git pull"
alias gpu="git push"
alias gput="git push --tags"
alias gr="git remote -v"
alias grh="git fetch origin && git reset --hard origin/master"
alias grm="git ls-files -i --exclude-from=.gitignore | xargs git rm --cached"
alias gs="git status"
alias gsa="git stash apply"
alias gsh="git show"
alias gsc="git stash clear"
alias gsu="git stash -u"
alias gt="git tag"
alias gtl="git tag -l"
alias gv="gh repo view"

# Kubernetes (there are also a few functions defined in .functionsrc)
## General functions
alias ka="kubectl apply"
alias kapi="kubectl api-resources --sort-by=name"
## Context management
alias kc="kubectl config unset current-context"
alias kcvstg="kubectl config use-context validator-control-plane-staging"
alias kcvprod="kubectl config use-context validator-control-plane"
# TODO Remove once I'm used to the Oh My Zsh kubectl plugin aliases
alias kd="kubectl describe"
alias kdf="kubectl delete -f"
alias ke="kubectl exec -it"
alias kf="kgpf"
# TODO Remove once I'm used to the Oh My Zsh kubectl plugin aliases
alias kg="kubectl get"
alias kgpa="kubectl get pods --all-namespaces -o wide"
alias kgsa="kubectl get services --all-namespaces"
alias kgmc="kubectl get managedclusters -n validations"
alias kgn="kubectl get namespaces"
## Custom functions
alias kgv="kubectl get validations -n validations"
